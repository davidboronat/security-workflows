name: "Reusable workflow for SAST and SCA scans"

on:
  workflow_call:
    inputs:
      enable_sast:
        required: true
        type: boolean
        default: true
      enable_sca:
        required: true
        type: boolean
        default: true
      repo_url:
        required: true
        type: string
      branch_name:
        required: true
        type: string
    secrets:
      pat_token:
        required: false
      server:
        required: true
      app_token:
        required: false

jobs:
  security_scan:
    runs-on: ubuntu-latest
    steps:
      - name: Call Security Scan API for Selected Scans
        run: |
          private_token_param=""
          if [ ! -z "${{ secrets.pat_token }}" ]; then
            private_token_param="&private=${{ secrets.pat_token }}"
          fi
          app_auth_token_param=""
          if [ ! -z "${{ secrets.app_token }}" ]; then
            app_auth_token_param="&auth=${{ secrets.app_token }}"
          fi
          response=$(curl -X GET \
            "${{ secrets.server }}/sastsca?sast=${{ inputs.enable_sast }}&sca=${{ inputs.enable_sca }}&repo=${{ inputs.repo_url }}&branch=${{ inputs.branch_name }}${private_token_param}${app_auth_token_param}&file=html")
          echo "API Response: $response"
          brief_sast=$(echo "$response" | jq -r '.["brief-sast"] // "null"')
          detailed_sast=$(echo "$response" | jq -r '.["detailed-sast"] // "null"')
          brief_sca=$(echo "$response" | jq -r '.["brief-sca"] // "null"')
          detailed_sca=$(echo "$response" | jq -r '.["detailed-sca"] // "null"')
          echo "brief_sast=$brief_sast" >> $GITHUB_ENV
          echo "detailed_sast=$detailed_sast" >> $GITHUB_ENV
          echo "brief_sca=$brief_sca" >> $GITHUB_ENV
          echo "detailed_sca=$detailed_sca" >> $GITHUB_ENV

  sast_scan:
    needs: security_scan
    runs-on: ubuntu-latest
    steps:
      - name: Retrieve Results for SAST
        if: env.brief_sast != 'null'
        run: |
          for ((i=0; i<30; i++)); do
            response=$(curl -s -w "%{http_code}" "${{ secrets.server }}${{ env.brief_sast }}")
            http_code=${response: -3}
            if [ $http_code -eq 200 ]; then
              content=$(echo ${response} | head -c-4)
              curl -o SAST.html "${{ secrets.server }}${{ env.detailed_sast }}"
              echo "SAST Results:"
              echo "$content"
              break
            fi
            sleep 20
          done

      - name: Upload SAST Report
        uses: actions/upload-artifact@v4
        with:
          name: report-document-sast
          path: SAST.html

  sca_scan:
    needs: security_scan
    runs-on: ubuntu-latest
    steps:
      - name: Retrieve Results for SCA
        if: env.brief_sca != 'null'
        run: |
          for ((i=0; i<30; i++)); do
            response=$(curl -s -w "%{http_code}" "${{ secrets.server }}${{ env.brief_sca }}")
            http_code=${response: -3}
            if [ $http_code -eq 200 ]; then
              content=$(echo ${response} | head -c-4)
              curl -o SCA.html "${{ secrets.server }}${{ env.detailed_sca }}"
              echo "SCA Results:"
              echo "$content"
              break
            fi
            sleep 20
          done

      - name: Upload SCA Report
        uses: actions/upload-artifact@v4
        with:
          name: report-document-sca
          path: SCA.html

